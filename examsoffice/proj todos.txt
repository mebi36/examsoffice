#To-do list:
# finish refactoring code to ensure edit_result logic is working correctly
# 1.    make view for updating individual student bio data: see what forms have to offer for this req - done
#2.     make view for updating individual student progress history
# new   make view for deleting existing students?
# new   make view to view recently added students with option of editing or removing them from the system.
#new    make view to view recently added results(with courses aggregated together) -done
        #new could it be possible to then find the bulk results and make it available for bulk deletion?
# 3.    make view for updating entire class bio data
# 4.    make view for updating entire class academic progress history
# 5.    make view for updating the 'current_level_of_study' field for a list of
        # students
# 6.    make app/view for updating the department's current program requirements
7. downloading the class list should also be possible
#8.     student repetition workflow should be considered.


# IN the courses app
# 1. Course creation should be possible (only after a rigorous search of the 
#       courses database)
# 2.Make it clear that courses should never be edited due to change in curriculum
    # that rather, new courses have to be created to fit new academic requirements
#should courses have field to see years where it has results/have been offered by the department
#this will make sure the user understands the effect deleting a course will have

#IN lecturers app
1. a view for editing lecturer bio data - done
2. a view for easily changing the current head of dept. -  done

#in programs app
# there could be a view for adding a single program requirement
# and another viw for adding the entire program requirement of 
# for an entire level of study
# there could be a view for reviewing the program requirement of 
# the last session and agreeing that nothing has changed/adopting
# it for the new session.

once the tasks for the programs app is done, attention will shift to the progresshistory functionality
of the system
after which these features can be tied together with the results app for determining the eligibility of
a student to graduate


#the progresshistory functionality
build out the functionality for adding new sessions and semesters

could be designed in such a way that it would be entered the first time and then
the user can simply say that this session's program requirement is the same as last year,
they could also be allowed to modify last session's requirements and save it as the 
program requirements for the new session
